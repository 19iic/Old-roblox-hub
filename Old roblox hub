-- Old Roblox Hub.
-- Credits to 19iic

-- Instances:

local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local OldAnimation = Instance.new("TextButton")
local Old2016HudDesign = Instance.new("TextButton")
local TextLabel = Instance.new("TextLabel")

--Properties:

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(62, 62, 62)
Frame.BackgroundTransparency = 0.750
Frame.Position = UDim2.new(0.364532024, 0, 0.241038322, 0)
Frame.Size = UDim2.new(0, 359, 0, 345)
Frame.Active = true

OldAnimation.Name = "Old Animation"
OldAnimation.Parent = Frame
OldAnimation.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
OldAnimation.BorderColor3 = Color3.fromRGB(143, 143, 143)
OldAnimation.BorderSizePixel = 2
OldAnimation.Position = UDim2.new(0.0473537594, 0, 0.11304348, 0)
OldAnimation.Size = UDim2.new(0, 153, 0, 279)
OldAnimation.Font = Enum.Font.Arial
OldAnimation.Text = "Old animation"
OldAnimation.TextColor3 = Color3.fromRGB(222, 222, 222)
OldAnimation.TextSize = 15.000
OldAnimation.TextStrokeColor3 = Color3.fromRGB(57, 57, 57)
OldAnimation.MouseButton1Down:connect(function()
	game.Players.LocalPlayer.Character:BreakJoints()
	game.Players.LocalPlayer.Character=nil
	Connection = game.Workspace.DescendantAdded:Connect(function(c)
		if c.Name == "Animate" then
			c.Disabled=true        
		end
	end)
	repeat wait() until game.Players.LocalPlayer.Character
	Char = game.Players.LocalPlayer.Character
	Died = game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Died:Connect(function()
		Connection:Disconnect()
		Died:Disconnect()
	end)
	wait(.1)
	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end

	-- ANIMATION

	-- declarations

	local Figure = game.Players.LocalPlayer.Character
	local Torso = waitForChild(Figure, "Torso")
	local RightShoulder = waitForChild(Torso, "Right Shoulder")
	local LeftShoulder = waitForChild(Torso, "Left Shoulder")
	local RightHip = waitForChild(Torso, "Right Hip")
	local LeftHip = waitForChild(Torso, "Left Hip")
	local Neck = waitForChild(Torso, "Neck")
	local Humanoid = waitForChild(Figure, "Humanoid")
	local pose = "Standing"

	local toolAnim = "None"
	local toolAnimTime = 0

	local jumpMaxLimbVelocity = 0.75

	-- functions

	function onRunning(speed)
		if speed>0 then
			pose = "Running"
		else
			pose = "Standing"
		end
	end

	function onDied()
		pose = "Dead"
	end

	function onJumping()
		pose = "Jumping"
	end

	function onClimbing()
		pose = "Climbing"
	end

	function onGettingUp()
		pose = "GettingUp"
	end

	function onFreeFall()
		pose = "FreeFall"
	end

	function onFallingDown()
		pose = "FallingDown"
	end

	function onSeated()
		pose = "Seated"
	end

	function onPlatformStanding()
		pose = "PlatformStanding"
	end

	function onSwimming(speed)
		if speed>0 then
			pose = "Running"
		else
			pose = "Standing"
		end
	end

	function moveJump()
		RightShoulder.MaxVelocity = jumpMaxLimbVelocity
		LeftShoulder.MaxVelocity = jumpMaxLimbVelocity
		RightShoulder:SetDesiredAngle(3.14)
		LeftShoulder:SetDesiredAngle(-3.14)
		RightHip:SetDesiredAngle(0)
		LeftHip:SetDesiredAngle(0)
	end


	-- same as jump for now

	function moveFreeFall()
		RightShoulder.MaxVelocity = jumpMaxLimbVelocity
		LeftShoulder.MaxVelocity = jumpMaxLimbVelocity
		RightShoulder:SetDesiredAngle(3.14)
		LeftShoulder:SetDesiredAngle(-3.14)
		RightHip:SetDesiredAngle(0)
		LeftHip:SetDesiredAngle(0)
	end

	function moveSit()
		RightShoulder.MaxVelocity = 0.15
		LeftShoulder.MaxVelocity = 0.15
		RightShoulder:SetDesiredAngle(3.14 /2)
		LeftShoulder:SetDesiredAngle(-3.14 /2)
		RightHip:SetDesiredAngle(3.14 /2)
		LeftHip:SetDesiredAngle(-3.14 /2)
	end

	function getTool()
		for _, kid in ipairs(Figure:GetChildren()) do
			if kid.className == "Tool" then return kid end
		end
		return nil
	end

	function getToolAnim(tool)
		for _, c in ipairs(tool:GetChildren()) do
			if c.Name == "toolanim" and c.className == "StringValue" then
				return c
			end
		end
		return nil
	end

	function animateTool()

		if (toolAnim == "None") then
			RightShoulder:SetDesiredAngle(1.57)
			return
		end

		if (toolAnim == "Slash") then
			RightShoulder.MaxVelocity = 0.5
			RightShoulder:SetDesiredAngle(0)
			return
		end

		if (toolAnim == "Lunge") then
			RightShoulder.MaxVelocity = 0.5
			LeftShoulder.MaxVelocity = 0.5
			RightHip.MaxVelocity = 0.5
			LeftHip.MaxVelocity = 0.5
			RightShoulder:SetDesiredAngle(1.57)
			LeftShoulder:SetDesiredAngle(1.0)
			RightHip:SetDesiredAngle(1.57)
			LeftHip:SetDesiredAngle(1.0)
			return
		end
	end

	function move(time)
		local amplitude
		local frequency

		if (pose == "Jumping") then
			moveJump()
			return
		end

		if (pose == "FreeFall") then
			moveFreeFall()
			return
		end

		if (pose == "Seated") then
			moveSit()
			return
		end

		local climbFudge = 0

		if (pose == "Running") then
			if (RightShoulder.CurrentAngle > 1.5 or RightShoulder.CurrentAngle < -1.5) then
				RightShoulder.MaxVelocity = jumpMaxLimbVelocity
			else  
				RightShoulder.MaxVelocity = 0.15
			end
			if (LeftShoulder.CurrentAngle > 1.5 or LeftShoulder.CurrentAngle < -1.5) then
				LeftShoulder.MaxVelocity = jumpMaxLimbVelocity
			else  
				LeftShoulder.MaxVelocity = 0.15
			end
			amplitude = 1
			frequency = 9
		elseif (pose == "Climbing") then
			RightShoulder.MaxVelocity = 0.5
			LeftShoulder.MaxVelocity = 0.5
			amplitude = 1
			frequency = 9
			climbFudge = 3.14
		else
			amplitude = 0.1
			frequency = 1
		end

		desiredAngle = amplitude * math.sin(time*frequency)

		RightShoulder:SetDesiredAngle(desiredAngle + climbFudge)
		LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge)
		RightHip:SetDesiredAngle(-desiredAngle)
		LeftHip:SetDesiredAngle(-desiredAngle)


		local tool = getTool()

		if tool then

			animStringValueObject = getToolAnim(tool)

			if animStringValueObject then
				toolAnim = animStringValueObject.Value
				-- message recieved, delete StringValue
				animStringValueObject.Parent = nil
				toolAnimTime = time + .3
			end

			if time > toolAnimTime then
				toolAnimTime = 0
				toolAnim = "None"
			end

			animateTool()


		else
			toolAnim = "None"
			toolAnimTime = 0
		end
	end


	-- connect events

	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Jumping:connect(onJumping)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.GettingUp:connect(onGettingUp)
	Humanoid.FreeFalling:connect(onFreeFall)
	Humanoid.FallingDown:connect(onFallingDown)
	Humanoid.Seated:connect(onSeated)
	Humanoid.PlatformStanding:connect(onPlatformStanding)
	Humanoid.Swimming:connect(onSwimming)
	-- main program

	local runService = game:service("RunService");

	while Figure.Parent~=nil do
		local _, time = wait(0.1)
		move(time)
	end
end)

Old2016HudDesign.Name = "Old 2016 Hud Design"
Old2016HudDesign.Parent = Frame
Old2016HudDesign.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Old2016HudDesign.BorderColor3 = Color3.fromRGB(143, 143, 143)
Old2016HudDesign.BorderSizePixel = 2
Old2016HudDesign.Position = UDim2.new(0.523676872, 0, 0.11304348, 0)
Old2016HudDesign.Size = UDim2.new(0, 153, 0, 279)
Old2016HudDesign.Font = Enum.Font.Arial
Old2016HudDesign.Text = "Old 2016 Hud Design"
Old2016HudDesign.TextColor3 = Color3.fromRGB(222, 222, 222)
Old2016HudDesign.TextSize = 14.000
Old2016HudDesign.TextStrokeColor3 = Color3.fromRGB(57, 57, 57)
Old2016HudDesign.MouseButton1Down:connect(function()
	loadstring(game:HttpGet('https://raw.githubusercontent.com/kosuke14/REBOYHub/main/games/2016_Roblox.lua'))()
end)

TextLabel.Parent = Frame
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderSizePixel = 4
TextLabel.Position = UDim2.new(0.239554316, 0, -0.0260869563, 0)
TextLabel.Size = UDim2.new(0, 206, 0, 59)
TextLabel.Text = "Game Menu"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextSize = 20.000
TextLabel.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)

-- Scripts:

local function OMZC_fake_script() -- Frame.LocalScript 
	local script = Instance.new('LocalScript', Frame)

	local UIS = game:GetService('UserInputService')
	local frame = script.Parent
	local dragToggle = nil
	local dragSpeed = 0.25
	local dragStart = nil
	local startPos = nil
	
	local function updateInput(input)
		local delta = input.Position - dragStart
		local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
			startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		game:GetService('TweenService'):Create(frame, TweenInfo.new(dragSpeed), {Position = position}):Play()
	end
	
	frame.InputBegan:Connect(function(input)
		if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then 
			dragToggle = true
			dragStart = input.Position
			startPos = frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragToggle = false
				end
			end)
		end
	end)
	
	UIS.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			if dragToggle then
				updateInput(input)
			end
		end
	end)
	
end
coroutine.wrap(OMZC_fake_script)()
